@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --grid-color: rgba(0, 255, 157, 0.1);
}

@layer base {
  html {
    font-family: "Share Tech Mono", monospace;
  }
}

@layer components {
  .cyber-button {
    @apply bg-cyber-dark border border-cyber-neon text-cyber-neon px-4 py-2 rounded 
           hover:bg-cyber-neon hover:text-cyber-dark transition-all duration-300 
           shadow-lg shadow-cyber-neon/20 font-cyber;
  }
  
  .cyber-card {
    @apply bg-cyber-dark/80 border border-cyber-neon/30 rounded-lg p-4 backdrop-blur-sm
    relative overflow-hidden shadow-lg shadow-cyber-neon/10 font-cyber;
  }

  .cyber-badge {
    @apply px-2 py-1 text-xs rounded-full font-cyber;
  }

  .cyber-badge-success {
    @apply cyber-badge bg-cyber-success/20 text-cyber-success;
  }

  .cyber-badge-warning {
    @apply cyber-badge bg-cyber-warning/20 text-cyber-warning;
  }

  .cyber-badge-danger {
    @apply cyber-badge bg-cyber-danger/20 text-cyber-danger;
  }

  .glitch-text {
    @apply relative font-cyber;
    text-shadow: 0.05em 0 0 rgba(255, 0, 0, 0.75),
                -0.025em -0.05em 0 rgba(0, 255, 0, 0.75),
                0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
    animation: glitch 500ms infinite;
  }
}

/* Optional: Add some custom styling for code-like elements */
.code-text {
  @apply font-cyber text-cyber-neon;
}

/* Optional: Add a blinking cursor effect for certain elements */
.cursor-effect::after {
  content: '_';
  animation: blink 1s step-end infinite;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

/* Add to your existing index.css */
@layer components {
    .cyber-input {
      @apply font-cyber tracking-wider;
      transition: all 0.2s ease-in-out;
    }
  
    .cyber-input:focus {
      @apply shadow-neon;
    }
  }
  
  /* Add a subtle scanning line animation */
  .cyber-card::before {
    content: '';
    position: absolute;
    top: -100%;
    left: 0;
    width: 100%;
    height: 10px;
    background: linear-gradient(
      transparent,
      theme('colors.cyber.neon') 50%,
      transparent
    );
    opacity: 0.1;
    animation: scan 4s linear infinite;
  }
  
  @keyframes scan {
    0% {
      top: -100%;
    }
    100% {
      top: 200%;
    }
  }
  
  @tailwind base;
@tailwind components;
@tailwind utilities;

/* Keep your existing CSS and add these new styles */

/* Cyberpunk Grid Background */
.cyber-grid-bg {
  background-size: 50px 50px;
  background-image: 
    linear-gradient(to right, var(--grid-color) 1px, transparent 1px),
    linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
  animation: grid-move 20s linear infinite;
}

/* Matrix-like Digital Rain */
.digital-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.digital-rain::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 255, 157, 0.15) 0%,
    rgba(0, 255, 157, 0.15) 1px,
    transparent 1px,
    transparent 2px
  );
  animation: rain 20s linear infinite;
  transform: translateY(0);
}

/* Hexagon Pattern */
.hex-pattern {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(
    circle at center,
    var(--grid-color) 1px,
    transparent 1px
  );
  background-size: 30px 30px;
  opacity: 0.5;
  animation: pulse 4s ease-in-out infinite;
}

/* Glowing Orbs */
.cyber-orbs::before {
  content: '';
  position: fixed;
  width: 200px;
  height: 200px;
  background: radial-gradient(
    circle,
    rgba(0, 255, 157, 0.1) 0%,
    transparent 70%
  );
  filter: blur(20px);
  animation: orb-float 10s infinite;
}

/* Scanning Lines */
.scan-lines {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: repeating-linear-gradient(
    0deg,
    rgba(0, 255, 157, 0.03) 0%,
    rgba(0, 255, 157, 0.03) 1px,
    transparent 1px,
    transparent 2px
  );
  pointer-events: none;
}

/* Animations */
@keyframes grid-move {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

@keyframes rain {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.6;
  }
}

@keyframes orb-float {
  0%, 100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(40vw, 20vh);
  }
  50% {
    transform: translate(80vw, 40vh);
  }
  75% {
    transform: translate(20vw, 60vh);
  }
}

/* Noise Texture */
.noise {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.05;
  pointer-events: none;
}

/* Add these styles to your index.css */

:root {
    --grid-color: rgba(0, 255, 157, 0.1);
  }
  
  /* Cyberpunk Grid Background */
  .cyber-grid-bg {
    background-size: 50px 50px;
    background-image: 
      linear-gradient(to right, var(--grid-color) 1px, transparent 1px),
      linear-gradient(to bottom, var(--grid-color) 1px, transparent 1px);
    animation: grid-move 20s linear infinite;
  }
  
  /* Matrix-like Digital Rain */
  .digital-rain::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 255, 157, 0.15) 0%,
      rgba(0, 255, 157, 0.15) 1px,
      transparent 1px,
      transparent 2px
    );
    animation: rain 20s linear infinite;
    transform: translateY(0);
  }
  
  /* Hexagon Pattern */
  .hex-pattern {
    background-image: radial-gradient(
      circle at center,
      var(--grid-color) 1px,
      transparent 1px
    );
    background-size: 30px 30px;
    opacity: 0.5;
    animation: pulse 4s ease-in-out infinite;
  }
  
  /* Glowing Orbs */
  .cyber-orbs::before {
    content: '';
    position: absolute;
    width: 200px;
    height: 200px;
    background: radial-gradient(
      circle,
      rgba(0, 255, 157, 0.1) 0%,
      transparent 70%
    );
    filter: blur(20px);
    animation: orb-float 10s infinite;
  }
  
  /* Scanning Lines */
  .scan-lines {
    background: repeating-linear-gradient(
      0deg,
      rgba(0, 255, 157, 0.03) 0%,
      rgba(0, 255, 157, 0.03) 1px,
      transparent 1px,
      transparent 2px
    );
  }
  
  /* Noise Texture */
  .noise {
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.05;
  }
  
  /* Animations */
  @keyframes grid-move {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 50px 50px;
    }
  }
  
  @keyframes rain {
    0% {
      transform: translateY(-100%);
    }
    100% {
      transform: translateY(100%);
    }
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.6;
    }
  }
  
  @keyframes orb-float {
    0%, 100% {
      transform: translate(0, 0);
    }
    25% {
      transform: translate(40vw, 20vh);
    }
    50% {
      transform: translate(80vw, 40vh);
    }
    75% {
      transform: translate(20vw, 60vh);
    }
  }
  